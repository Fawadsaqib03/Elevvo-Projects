-- If running second time mysql, so run below these
SHOW DATABASES;
USE chinook;
SHOW TABLES;
SELECT * FROM Customer LIMIT 15;

-- ============================================
-- CHINOOK DATABASE INSIGHTS
-- ============================================

-- TOP-SELLING TRACKS (PRODUCTS)
-- This query finds the top 10 tracks by total revenue generated
SELECT 
    t.Name AS TrackName,
    SUM(il.Quantity) AS TotalSold,
    ROUND(SUM(il.UnitPrice * il.Quantity), 2) AS TotalRevenue
FROM invoiceLine il
JOIN track t ON il.TrackId = t.TrackId
GROUP BY t.Name
ORDER BY TotalRevenue DESC
LIMIT 10;

-- ============================================

-- REVENUE PER COUNTRY
-- This query shows total sales revenue by country (top 10)
SELECT 
    c.Country,
    ROUND(SUM(i.Total), 2) AS TotalRevenue
FROM invoice i
JOIN customer c ON i.CustomerId = c.CustomerId
GROUP BY c.Country
ORDER BY TotalRevenue DESC
LIMIT 10;

-- ============================================

-- MONTHLY SALES PERFORMANCE
-- Shows month-wise revenue trend over time
SELECT 
    DATE_FORMAT(i.InvoiceDate, '%Y-%m') AS Month,
    ROUND(SUM(i.Total), 2) AS MonthlyRevenue
FROM invoice i
GROUP BY Month
ORDER BY Month;

-- ============================================

-- REVENUE BY GENRE
-- Identifies which music genres bring the most revenue
SELECT 
    g.Name AS Genre,
    ROUND(SUM(il.UnitPrice * il.Quantity), 2) AS TotalRevenue
FROM invoiceLine il
JOIN track t ON il.TrackId = t.TrackId
JOIN genre g ON t.GenreId = g.GenreId
GROUP BY g.Name
ORDER BY TotalRevenue DESC;

-- ============================================

-- TOP CUSTOMERS BY SPENDING
-- Finds the top 5 customers who have spent the most
SELECT 
    c.CustomerId,
    CONCAT(c.FirstName, ' ', c.LastName) AS CustomerName,
    ROUND(SUM(i.Total), 2) AS TotalSpent
FROM invoice i
JOIN customer c ON i.CustomerId = c.CustomerId
GROUP BY c.CustomerId
ORDER BY TotalSpent DESC
LIMIT 5;

-- ============================================

-- BONUS
-- SALES PERFORMANCE BY EMPLOYEE 
-- Shows revenue generated by each sales representative
SELECT 
    e.EmployeeId,
    CONCAT(e.FirstName, ' ', e.LastName) AS SalesRep,
    ROUND(SUM(i.Total), 2) AS TotalRevenue
FROM invoice i
JOIN customer c ON i.CustomerId = c.CustomerId
JOIN employee e ON c.SupportRepId = e.EmployeeId
GROUP BY e.EmployeeId
ORDER BY TotalRevenue DESC;
 
 -- ============================================
 
-- Top-Selling Track per Genre
-- Uses a WINDOW FUNCTION (ROW_NUMBER) to rank tracks within each genre
SELECT GenreName, TrackName, TotalRevenue
FROM (
    SELECT 
        g.Name AS GenreName,
        t.Name AS TrackName,
        ROUND(SUM(il.UnitPrice * il.Quantity), 2) AS TotalRevenue,
        ROW_NUMBER() OVER (PARTITION BY g.GenreId ORDER BY SUM(il.UnitPrice * il.Quantity) DESC) AS RowNum
    FROM invoiceLine il
    JOIN track t ON il.TrackId = t.TrackId
    JOIN genre g ON t.GenreId = g.GenreId
    GROUP BY g.GenreId, g.Name, t.Name
) ranked_tracks
WHERE RowNum = 1   -- Picks the top track per genre
ORDER BY TotalRevenue DESC;

-- ============================================

-- Find Each Employee's Best Customer (Highest Revenue)
SELECT EmployeeName, CustomerName, TotalRevenue
FROM (
    SELECT 
        CONCAT(e.FirstName, ' ', e.LastName) AS EmployeeName,
        CONCAT(c.FirstName, ' ', c.LastName) AS CustomerName,
        ROUND(SUM(i.Total), 2) AS TotalRevenue,
        ROW_NUMBER() OVER (PARTITION BY e.EmployeeId ORDER BY SUM(i.Total) DESC) AS RowNum
    FROM employee e
    JOIN customer c ON e.EmployeeId = c.SupportRepId
    JOIN invoice i ON c.CustomerId = i.CustomerId
    GROUP BY e.EmployeeId, e.FirstName, e.LastName, c.CustomerId, c.FirstName, c.LastName
) ranked_customers
WHERE RowNum = 1
ORDER BY TotalRevenue DESC;

-- ============================================

-- Top Employee per Country using DENSE_RANK()
SELECT Country, SupportRepName, TotalSales
FROM (
    SELECT 
        c.Country,
        CONCAT(e.FirstName, ' ', e.LastName) AS SupportRepName,
        ROUND(SUM(i.Total), 2) AS TotalSales,
        DENSE_RANK() OVER (PARTITION BY c.Country ORDER BY SUM(i.Total) DESC) AS RankInCountry
    FROM Customer c
    JOIN Employee e ON c.SupportRepId = e.EmployeeId
    JOIN Invoice i ON c.CustomerId = i.CustomerId
    GROUP BY c.Country, e.EmployeeId, e.FirstName, e.LastName
) ranked_employees
WHERE RankInCountry = 1
ORDER BY Country, TotalSales DESC;

-- ============================================

-- Top 3 Customers by Total Revenue using RANK()
SELECT CustomerId, FirstName, LastName, TotalRevenue
FROM (
    SELECT 
        c.CustomerId,
        c.FirstName,
        c.LastName,
        ROUND(SUM(i.Total), 2) AS TotalRevenue,
        RANK() OVER (ORDER BY SUM(i.Total) DESC) AS RankByRevenue
    FROM Customer c
    JOIN Invoice i ON c.CustomerId = i.CustomerId
    GROUP BY c.CustomerId, c.FirstName, c.LastName
) ranked_customers
WHERE RankByRevenue <= 3
ORDER BY RankByRevenue;